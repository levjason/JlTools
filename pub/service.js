app.service('myserv', function() {
          this.getServiceList = function () {
    return [{"serviceName":"jc.tools.pub.client:sendSMS","description":"DON\u0027T FORGET TO PAY AT \n\nhttp://www.envoyersms.org/api/v1/","serviceinputs":[{"inputName":"message","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"telephone","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"fromNumber","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"sequence","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"user","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"pass","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[{"outputName":"sentOkay","outputType":"String","outputComments":"no comment","required":true,"wrapperType":"--"}]},{"serviceName":"jc.tools.pub.date:stringToDate","description":"Converts the given date string into a java date object applying the given pattern. \nIf no date given, returns a date object for now. The pattern is mandatory and must\nrespect the java standard e.g.\n\n2015-12-01 would use the pattern \u0027yyyy-MM-dd\u0027\n\nINPUT\n-------\nstring\t- The date described as a string\npattern \t- The pattern to be used to translate the above string\n\nOUTPUT\n---------\ndate\t\t- The java date object representing the date.\n\nEXCEPTION\n------------\nInvalid date pattern or missing","serviceinputs":[{"inputName":"string","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"pattern","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[{"outputName":"date","outputType":"Object","outputComments":"no comment","required":true,"wrapperType":"java.util.Date"}]},{"serviceName":"jc.tools.pub.ldap:deleteListenerCookie","description":"Deletes the session cookie established by the active directory listener when registerActiveDirectoryListener is called for the\nfirst time. The cookie is used to maintain state between stopping and starting a listener using the egisterActiveDirectoryListener\nand ocp.tools.pub.ldap:stopListener services.\n\nSeparate cookies are maintained between listeners and distinguished using the name of the processing services. It is persisted\nto disk to ensure survival even if the service is restarted or crashes. The files can be found in the package configuration directory\n\n\u003cHOME\u003e/IntegrationServer/instances/\u003cinstance\u003e/packages/OcpPublicTools/config/ad-dirsync-cookie_\u003cservice\u003e\n\nINPUT\n------\nservice - Name of the processing service, used to identify the correct listener\n\nOUTPUT\n----------\nnone\n\nEXCEPTION\n------------\nFileNotFoundException - File could not be found","serviceinputs":[{"inputName":"service","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[]},{"serviceName":"jc.tools.pub.ldap:registerActiveDirectoryListener","description":"Provides support to listen for updates to an Active Directory server, detecting insertions, update and deletions\nof all objects. Based on the DirSyncControl protocol.\nThe base of a DirSync search must be the root of a directory partition, which can be a domain partition, the configuration \npartition, or the schema partition. The scope of a DirSync search must be ADS_SCOPE_SUBTREE, that is, the entire subtree \nof the partition. Be aware that for a search of a domain partition, the subtree includes the heads, but not the contents, of the \nconfiguration and schema partitions.\n\nThe specified service should implement the specification \u0027ocp.tools.pub.ldap:ProcessingService\u0027\n\nA session cookie is created when you first call this service to maintain state between this server and the active directory server\nand persisted in the OcpPublicTools config directory. The file can be deleted using the service deleteListenerCookie\n\nNOTE: Do NOT create multiple listeners for the SAME service, otherwise one listeners cookie will over-write the other as the cookie\nname is based on the processing service.\n\nINPUT\n------\nurl\t\t\t\t\t- ldap url including port\nprincipal\t\t\t\t- user account to connect with\ncredentials\t\t\t- Password\nsearchBase_dn\t\t- directiory root to scan, must a valid domain partion\nsearchFilter\t\t\t- optional ldap filter, if null default is (\u0026(objectClass\u003dperson)(objectClass\u003duser)(cn\u003d*))\nreturnAttributes\t\t- (optional) list of attributes to check for updates\nwmuser\t\t\t\t- webMethods user to be used to invoke processing service \nservice\t\t\t\t- service to be invoked for processing events\nuserIdAttributeName\t- active directory attribute used to identify employees\ntimeout\t\t\t\t- timeout used to manage connectivity\ndebugLevel\t\t\t- Either \"Info\", \"Error\", \"Warn\" or \"Debug\"\n\nOUTPUT\n--------\nnone\n\nEXCEPTION\n------------\nNotSupportedException\nNamingException\nIOException","serviceinputs":[{"inputName":"url","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"principal","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"credentials","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"searchBase_dn","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"searchFilter","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"returnAttributes","inputType":"String List","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"wmuser","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"service","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"userIdAttributeName","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"timeout","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"restartInterval","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"debugLevel","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[]},{"serviceName":"jc.tools.pub.ldap:stopListener","description":"Stops the active directory listener established with the service ocp.tools.pub.ldap:registerActiveDirectoryListener.\n\nINPUT\n------\nservice - The service used to process the events for the given registry.\n\nOUTPUT\n--------\nfound - true if the listener was found and stopped successfully, false if not found\n\nEXCEPTION\n------------\nNamingException","serviceinputs":[{"inputName":"service","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"}],"serviceoutputs":[{"outputName":"found","outputType":"String","outputComments":"no comment","required":true,"wrapperType":"--"}]},{"serviceName":"jc.tools.pub.ntlm:http","description":"Replacement service for pub.client:http to support NTLM authentication over http.\nNTLM is a window proprietary authentical model used to authenticate PC\u0027s in a windows network.\nThis service is required if attempting to authenticate from a non-windows server, where native\nNTLM support is not provided by webMethods.\n\nINPUT\n------\nurl\t\t- url excluding \u0027http\u0027, but including port and path\nmethod\t- One of \"get\", \"post\", \"put\" or \"delete\"\nloadAs    - Only \"string\" is currently supported\ndata\t\t\n   string\t- string representing body of request to be sent\nauth\n   type \t- Must be NTLM, use standard pub.client:http otherwise\n   domain - authentication domain of windows password i.e. P2O5 of P2O5\\ABRABRI\n   user \t- user part of windows login i.e. ABRABRI of P2O5\\ABRABRI\n   pass\t- password\n   host \t- Optional name/ip of the requesting (rarely required)\nheaders  - key/value pairs to be included in http header\ntimeout\t- timeout before non-completed request will be stopped\n\nOUTPUT\n--------\nencodedURL\t- Forwarded url sent back from server\nheader \t- Additional http headers included in response\n  status \t- http status code, only accept 200\n  statusMessage - human readable status message\n  lines \t- Additional response headers\nbody\n  bytes\t- The  http response\n  stream\t- Not supported\n\nEXCEPTION\n------------\nMalformedURLException\nIOException\nHttpConnectionException","serviceinputs":[{"inputName":"url","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"method","inputType":"String","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"loadAs","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"data","inputType":"Document","inputComments":"no comment","required":true,"wrapperType":"--"},{"inputName":"auth","inputType":"Document","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"headers","inputType":"Document","inputComments":"no comment","required":false,"wrapperType":"--"},{"inputName":"timeout","inputType":"String","inputComments":"no comment","required":false,"wrapperType":"--"}],"serviceoutputs":[{"outputName":"encodedURL","outputType":"String","outputComments":"no comment","required":true,"wrapperType":"--"},{"outputName":"header","outputType":"Document","outputComments":"no comment","required":false,"wrapperType":"--"},{"outputName":"body","outputType":"Document","outputComments":"no comment","required":true,"wrapperType":"--"}]}];
}
this.getISEndpoint = function() { 
 return 'http://192.168.1.200:5555/';
}
this.getAPIList = function() { 
 return [];
}
this.getCreatedTime = function() { 
 return "07-01-2023 16:43:42 CET";
}
this.getPackageInfo = function(){
 return{"packageName":"JcPublicTools","displayName":"John Carter\u0027s toolbox","status":"Production","tags":["utility"],"version":"5.0","buildNumber":"151","description":"A complimentary set of services to use with your webMethods runtime to develop integration faster. \nService documentation is available in Designer via the comments of each service."};
}
});
